[{"M:\\projects\\E-voting project\\client\\src\\index.js":"1","M:\\projects\\E-voting project\\client\\src\\reportWebVitals.js":"2","M:\\projects\\E-voting project\\client\\src\\App.js":"3","M:\\projects\\E-voting project\\client\\src\\reducers\\index.js":"4","M:\\projects\\E-voting project\\client\\src\\components\\Navbar\\Navbar.js":"5","M:\\projects\\E-voting project\\client\\src\\components\\Home\\Home.js":"6","M:\\projects\\E-voting project\\client\\src\\components\\Auth\\Auth.js":"7","M:\\projects\\E-voting project\\client\\src\\reducers\\auth.js":"8","M:\\projects\\E-voting project\\client\\src\\reducers\\posts.js":"9","M:\\projects\\E-voting project\\client\\src\\components\\Navbar\\styles.js":"10","M:\\projects\\E-voting project\\client\\src\\style.js":"11","M:\\projects\\E-voting project\\client\\src\\components\\Auth\\style.js":"12","M:\\projects\\E-voting project\\client\\src\\components\\Auth\\customTicker.js":"13","M:\\projects\\E-voting project\\client\\src\\components\\AlertMessage.js":"14","M:\\projects\\E-voting project\\client\\src\\components\\Auth\\Icon.js":"15","M:\\projects\\E-voting project\\client\\src\\components\\Auth\\Input.js":"16","M:\\projects\\E-voting project\\client\\src\\components\\Auth\\Social.js":"17","M:\\projects\\E-voting project\\client\\src\\constants\\actionTypes.js":"18","M:\\projects\\E-voting project\\client\\src\\actions\\auth.js":"19","M:\\projects\\E-voting project\\client\\src\\components\\Forms\\Form.js":"20","M:\\projects\\E-voting project\\client\\src\\actions\\posts.js":"21","M:\\projects\\E-voting project\\client\\src\\components\\Posts\\Posts.js":"22","M:\\projects\\E-voting project\\client\\src\\components\\Forms\\style.js":"23","M:\\projects\\E-voting project\\client\\src\\components\\Posts\\Post\\Post.js":"24","M:\\projects\\E-voting project\\client\\src\\api\\index.js":"25","M:\\projects\\E-voting project\\client\\src\\components\\Menu.js":"26","M:\\projects\\E-voting project\\client\\src\\components\\Posts\\Post\\style.js":"27"},{"size":739,"mtime":1612154968000,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":4865,"mtime":1616237952237,"results":"31","hashOfConfig":"29"},{"size":147,"mtime":1611202192000,"results":"32","hashOfConfig":"29"},{"size":3674,"mtime":1615480558184,"results":"33","hashOfConfig":"29"},{"size":1244,"mtime":1615707394726,"results":"34","hashOfConfig":"29"},{"size":7871,"mtime":1615730815406,"results":"35","hashOfConfig":"29"},{"size":673,"mtime":1611761450000,"results":"36","hashOfConfig":"29"},{"size":577,"mtime":1611144164000,"results":"37","hashOfConfig":"29"},{"size":1346,"mtime":1611746838000,"results":"38","hashOfConfig":"29"},{"size":548,"mtime":1611154426000,"results":"39","hashOfConfig":"29"},{"size":1037,"mtime":1612181644000,"results":"40","hashOfConfig":"29"},{"size":437,"mtime":1612416944000,"results":"41","hashOfConfig":"29"},{"size":826,"mtime":1612415954000,"results":"42","hashOfConfig":"29"},{"size":558,"mtime":1611827442000,"results":"43","hashOfConfig":"29"},{"size":1894,"mtime":1615730870531,"results":"44","hashOfConfig":"29"},{"size":412,"mtime":1612446882000,"results":"45","hashOfConfig":"29"},{"size":265,"mtime":1611400212000,"results":"46","hashOfConfig":"29"},{"size":1221,"mtime":1615649178628,"results":"47","hashOfConfig":"29"},{"size":4898,"mtime":1612356874000,"results":"48","hashOfConfig":"29"},{"size":2005,"mtime":1612241368000,"results":"49","hashOfConfig":"29"},{"size":781,"mtime":1616603585715,"results":"50","hashOfConfig":"29"},{"size":447,"mtime":1611119206000,"results":"51","hashOfConfig":"29"},{"size":9542,"mtime":1616605759088,"results":"52","hashOfConfig":"29"},{"size":1499,"mtime":1615779327559,"results":"53","hashOfConfig":"29"},{"size":8436,"mtime":1612259926000,"results":"54","hashOfConfig":"29"},{"size":2049,"mtime":1611989512000,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"r9rhsx",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"M:\\projects\\E-voting project\\client\\src\\index.js",[],["115","116"],"M:\\projects\\E-voting project\\client\\src\\reportWebVitals.js",[],"M:\\projects\\E-voting project\\client\\src\\App.js",["117","118"],"import './App.css';\nimport { Container, IconButton, Typography } from '@material-ui/core';\nimport Navbar from './components/Navbar/Navbar';\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport Home from './components/Home/Home';\nimport Auth from './components/Auth/Auth';\nimport voters from './voters.json';\nimport { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ChatBot from 'react-simple-chatbot';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ScrollToTop from 'react-scroll-up';\nconst validData = voters;\nconst voterIds = validData.map((item) => (item.id))\nconst numbers = validData.map((item) => (item.mobile))\nconst initialState = { voterid: '', mobile: '', password: '', confirmpass: '', otp: '' };\nconst ErrorState = { mobile: { bool: false, text: '' }, otp: { bool: false, text: '' }, password: { bool: false, text: '' }, confirmpass: { bool: false, text: '' }, voterid: { bool: false, text: '' } }\n\nfunction App() {\n  const [verified, setVerification] = useState(false);\n  const [Sign, setSign] = useState(true);\n  const [formData, setFormdata] = useState(initialState);\n  const [errors, setErrors] = useState(ErrorState);\n  const [log, setLog] = useState(false);\n  const user = JSON.parse(localStorage.getItem('profile'))\n  const switchMode = () => {\n    setFormdata(initialState);\n    let elem = document.getElementById('email_test');\n    if (elem !== null) {\n      elem.focus();\n    }\n    setErrors(ErrorState)\n    setSign(!Sign);\n  };\n\n  return (\n\n    <Router>\n      <Container maxWidth=\"lg\">\n        <Navbar Sign={Sign} setSign={setSign} switchMode={switchMode} log={log} setLog={setLog} />\n        <Switch>\n          <Route path=\"/\" exact>\n            {!log && <ChatBot\n              floating={true}\n              headerTitle=\"Nandy's Bot\"\n              recognitionEnable={true}\n              userAvatar={user?.result?.imageUrl || user?.result?.picture?.data?.url || user?.result?.avatar_url}\n              steps={[\n                {\n                  id: '1',\n                  message: 'What is your name?',\n                  trigger: '2',\n                },\n                {\n                  id: '2',\n                  user: true,\n                  trigger: '3',\n                },\n                {\n                  id: '3',\n                  message: 'Hi {previousValue}, nice to meet you!',\n                  trigger: '4'\n\n                },\n                {\n                  id: '4',\n                  messsage: \"Are you?\",\n                  options: [\n                    { value: 2, label: 'Student', trigger: '5' },\n                    { value: 3, label: 'Software Developer', trigger: '5' },\n                  ],\n                },\n                {\n                  id: '5',\n                  options: [\n                    { value: 1, label: 'Python', trigger: '6' },\n                    { value: 2, label: 'C++', trigger: '6' },\n                    { value: 3, label: 'C#', trigger: '6' },\n                    { value: 4, label: 'Java Script', trigger: '6' },\n                    { value: 5, label: 'Java', trigger: '6' },\n                    { value: 6, label: 'Go', trigger: '6' },\n                  ],\n                },\n                {\n                  id: '6',\n                  options: [\n                    { value: 1, label: 'yes', trigger: '7' },\n                    { value: 1, label: 'No', trigger: '8' }\n                  ]\n                },\n                {\n                  id: '7',\n                  message: \"Thanks for chatting with Nandy :)\",\n                  end: true\n                },\n                {\n                  id: '8',\n                  message: \"Thanks for chatting with Nandy :)\",\n                  end: true\n                }\n              ]}\n            />}\n\n            <Home log={log} setLog={setLog} />\n\n          </Route>\n          <Route path=\"/auth\" exact><Auth validData={validData} voterIds={voterIds} verified={verified} setVerification={setVerification} Sign={Sign} formData={formData} errors={errors} setLog={setLog} switchMode={switchMode} setErrors={setErrors} setFormdata={setFormdata} initialState={initialState} ErrorState={ErrorState} setSign={setSign} /></Route>\n        </Switch>\n\n      </Container>\n\n      <ToastContainer closeOnClick />\n      {/* <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handleScrolls} id=\"fab\">\n        <IconButton className=\"up\">\n          <ArrowDownwardIcon fontSize=\"large\" />\n        </IconButton>\n      </Fab> */}\n      <ScrollToTop showUnder={160} style={{\n        bottom: 100,\n        right: 35,\n      }}>\n        <IconButton className=\"up\">\n          <ArrowUpwardIcon fontSize=\"large\" />\n        </IconButton>\n      </ScrollToTop>\n    </Router>\n\n  );\n}\n\nexport default App;\n","M:\\projects\\E-voting project\\client\\src\\reducers\\index.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\Navbar\\Navbar.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\Home\\Home.js",["119"],"import { Container, Grid, Grow } from \"@material-ui/core\";\r\nimport Form from \"../Forms/Form\";\r\nimport Posts from \"../Posts/Posts\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { getPosts } from '../../actions/posts';\r\nimport useStyles from '../../style';\r\n\r\nfunction Home({ log, setLog }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const [currentId, setCurrentId] = useState(0);\r\n    useEffect(() => {\r\n        dispatch(getPosts());\r\n        // if (currentId !== 0) { dispatch(getusers()); }\r\n    }, [dispatch, currentId])\r\n    return (\r\n\r\n        <Grow in>\r\n            <Container>\r\n                <Grid className={classes.mainContainer} container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n                    <Grid item xs={12} sm={7}>\r\n                        <Posts setCurrentId={setCurrentId} log={log} setLog={setLog} />\r\n                    </Grid>\r\n                    {/* <Grid item xs={12} sm={4}>\r\n                        <Form currentId={currentId} setCurrentId={setCurrentId} log={log} />\r\n                    </Grid> */}\r\n                </Grid>\r\n            </Container>\r\n        </Grow>\r\n\r\n    )\r\n}\r\n\r\nexport default Home;","M:\\projects\\E-voting project\\client\\src\\components\\Auth\\Auth.js",["120"],"import useStyles from './style';\r\n\r\nimport { Paper, Grid, Avatar, Button, Typography, Container } from '@material-ui/core';\r\nimport React from 'react';\r\nimport LockOutline from '@material-ui/icons/LockOutlined';\r\nimport Input from './Input';\r\nimport { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getusers, signin, signup } from '../../actions/auth';\r\nimport { validate } from 'email-validator';\r\nimport './style.css';\r\nimport emailjs from 'emailjs-com';\r\n// import ActionAlerts from '../AlertMessage';\r\n// import CustomTicker from './customTicker';\r\nimport { sendOTP } from '../../api';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Auth({ Sign, setSign, validData, voterIds, setFormdata, formData, errors, setErrors, switchMode, setLog, verified, setVerification }) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const [sent, setSent] = useState(false);\r\n    const [stateOTP, setOTP] = useState(\"\");\r\n    const handleOTP = async (e) => {\r\n        e.preventDefault();\r\n        var { data } = await sendOTP({ mobile: formData.mobile });\r\n        setOTP(data.otp);\r\n        setSent(true);\r\n    }\r\n    const verify = (e) => {\r\n        e.preventDefault();\r\n        let otp = formData.otp\r\n        if (otp === stateOTP) {\r\n            setVerification(true)\r\n            toast.success(\"Mobile verified successfully :)\")\r\n            setSent(false);\r\n        }\r\n        else {\r\n            setVerification(false)\r\n        }\r\n        setOTP(\"\");\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (Sign) {\r\n            dispatch(signup(formData, history));\r\n            setLog(true);\r\n            setTimeout(() => {\r\n                const users = JSON.parse(localStorage.getItem('users'))\r\n                emailjs.send(process.env.REACT_APP_SERVICE_ID, process.env.REACT_APP_TEMPLATE_ID, { to_name: users?.result?.name, from_name: \"Nandy\" }, process.env.REACT_APP_USER_ID)\r\n            }, 1000);\r\n        } else {\r\n            dispatch(signin(formData, history));\r\n            setLog(true);\r\n        }\r\n\r\n    };\r\n    useEffect(() => {\r\n        dispatch(getusers())\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const handleChange = (e) => {\r\n        switch (e.target.name) {\r\n            case 'password':\r\n                if (Sign) {\r\n                    let messages = [];\r\n                    if (e.target.value.length < 7) {\r\n                        messages.push('Password should be > than 6 characters!!')\r\n                    }\r\n                    if (!/[A-Z]/.test(e.target.value)) {\r\n                        messages.push('Password should contain atleast 1 Uppercase character!')\r\n                    }\r\n                    if (!/[!@#$&*^%~+=]/.test(e.target.value)) {\r\n                        messages.push('Password should contain atleast 1 Special character!')\r\n                    }\r\n                    if (messages.length !== 0) {\r\n                        setErrors({ ...errors, password: { bool: true, text: messages } })\r\n                    } else {\r\n                        setErrors({ ...errors, password: { bool: false, text: [] } })\r\n                    }\r\n                }\r\n                break;\r\n            case 'confirmpass':\r\n                let pass = formData.password\r\n                if (pass !== e.target.value) {\r\n                    setErrors({ ...errors, confirmpass: { bool: true, text: 'Passwords doesn\\'t match !' } })\r\n                } else {\r\n                    setErrors({ ...errors, confirmpass: { bool: false, text: '' } })\r\n                }\r\n                break\r\n            case 'mobile':\r\n                var data = validData.filter((item) => item.mobile === e.target.value)[0]\r\n                if (data?.mobile !== e.target.value) {\r\n                    setErrors({ ...errors, mobile: { bool: true, text: 'Mobile Number not exists :(' } })\r\n                }\r\n                else if (data.mobile === e.target.value) {\r\n                    setErrors({ ...errors, mobile: { bool: false, text: '' } })\r\n                }\r\n                break;\r\n            case 'voterid':\r\n                let voterid = e.target.value\r\n                if (!voterIds.includes(voterid)) {\r\n                    setErrors({ ...errors, voterid: { bool: true, text: 'Voter Id is invalid :(' } })\r\n                } else {\r\n                    setErrors({ ...errors, voterid: { bool: false, text: '' } })\r\n                }\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n        setFormdata({ ...formData, [e.target.name]: e.target.value })\r\n    }\r\n    const handleShowpassword = () => {\r\n        setShowPass(!showPass);\r\n    };\r\n    const [showPass, setShowPass] = useState(false);\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            {/* <CustomTicker message=\"Twitter Authentication will be\r\n             available soon!!\" /> */}\r\n            {/* <ActionAlerts severity=\"info\" message=\"LinkedIn Authentication is now Available! If there is any issue ping me via https://jjnanthakumar.github.io :)\" /> */}\r\n            <Paper className={classes.paper} elevation={3}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutline />\r\n                </Avatar>\r\n                <Typography variant=\"h5\">{Sign ? 'Sign Up' : 'Sign In'}</Typography>\r\n                <form className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Input verified={verified} sent={sent} data={formData.mobile} Sign={Sign} setSent={setSent} helperText={errors.mobile.text} error={errors.mobile.bool} value={formData.mobile} name=\"mobile\" label=\"Mobile Number\" handleChange={handleChange} sendOTP={handleOTP} />\r\n                        {sent && (\r\n                            <>\r\n                                <Input name=\"otp\" helperText={errors.otp.text} error={errors.otp.bool} value={formData.otp} handleChange={handleChange} label=\"Enter OTP here\" />\r\n                                <Button onClick={verify} size=\"small\" color=\"primary\"><small>&nbsp; Verify OTP</small></Button>\r\n                            </>\r\n                        )}\r\n                        <Input helperText={errors.voterid.text} error={errors.voterid.bool} value={formData.voterid} name=\"voterid\" label=\"Voter Id\" handleChange={handleChange} />\r\n                        <Input helperText={errors.password.text} id=\"pass\" error={errors.password.bool} value={formData.password} name=\"password\" type={showPass ? \"text\" : \"password\"} handleShowpassword={handleShowpassword} label=\"Password\" handleChange={handleChange} />\r\n\r\n                        {Sign && (\r\n                            <Input helperText={errors.confirmpass.text} error={errors.confirmpass.bool} value={formData.confirmpass} name=\"confirmpass\" label=\"Confirm Password\" type={showPass ? \"text\" : \"password\"} handleShowpassword={handleShowpassword} handleChange={handleChange} />\r\n                        )}\r\n                    </Grid>\r\n                    <Button type=\"submit\" disabled={!Sign ? !verified : false} className={classes.submit} fullWidth variant=\"contained\" color=\"primary\">\r\n                        {Sign ? 'Sign Up' : 'Sign In'}\r\n                    </Button>\r\n\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Button style={{ textTransform: 'capitalize' }} onClick={switchMode}>\r\n                                {Sign ? \"Already Have an Account? Log in\" : \"Don't have an account? Sign Up\"}</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Paper>\r\n        </Container >\r\n\r\n    )\r\n}\r\n\r\nexport default Auth","M:\\projects\\E-voting project\\client\\src\\reducers\\auth.js",[],"M:\\projects\\E-voting project\\client\\src\\reducers\\posts.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\Navbar\\styles.js",[],"M:\\projects\\E-voting project\\client\\src\\style.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\Auth\\style.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\Auth\\customTicker.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\AlertMessage.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\Auth\\Icon.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\Auth\\Input.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\Auth\\Social.js",[],"M:\\projects\\E-voting project\\client\\src\\constants\\actionTypes.js",[],"M:\\projects\\E-voting project\\client\\src\\actions\\auth.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\Forms\\Form.js",[],"M:\\projects\\E-voting project\\client\\src\\actions\\posts.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\Posts\\Posts.js",["121"],"import { useSelector } from \"react-redux\";\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport Post from \"./Post/Post\";\r\n// import useStyles from './styles';\r\nimport partys from '../../partys.json';\r\n\r\nconst Posts = ({ setCurrentId, log, setLog }) => {\r\n    // const classes = useStyles();\r\n    const posts=partys;\r\n    return (\r\n        !posts.length ? <CircularProgress /> : (\r\n            <Grid container alignItems=\"stretch\" spacing={3}>\r\n                {posts.map((post) => (\r\n                    <Grid key={post.id} item xs={12} sm={6}>\r\n                        <Post post={post} setCurrentId={setCurrentId} log={log} setLog={setLog} />\r\n                    </Grid>\r\n\r\n                ))}\r\n            </Grid>\r\n        )\r\n\r\n    )\r\n}\r\n\r\nexport default Posts;","M:\\projects\\E-voting project\\client\\src\\components\\Forms\\style.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\Posts\\Post\\Post.js",["122"],"M:\\projects\\E-voting project\\client\\src\\api\\index.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\Menu.js",[],"M:\\projects\\E-voting project\\client\\src\\components\\Posts\\Post\\style.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":2,"column":33,"nodeType":"129","messageId":"130","endLine":2,"endColumn":43},{"ruleId":"127","severity":1,"message":"131","line":16,"column":7,"nodeType":"129","messageId":"130","endLine":16,"endColumn":14},{"ruleId":"127","severity":1,"message":"132","line":2,"column":8,"nodeType":"129","messageId":"130","endLine":2,"endColumn":12},{"ruleId":"127","severity":1,"message":"133","line":11,"column":10,"nodeType":"129","messageId":"130","endLine":11,"endColumn":18},{"ruleId":"127","severity":1,"message":"134","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":21},{"ruleId":"127","severity":1,"message":"135","line":96,"column":13,"nodeType":"129","messageId":"130","endLine":96,"endColumn":16},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'numbers' is assigned a value but never used.","'Form' is defined but never used.","'validate' is defined but never used.","'useSelector' is defined but never used.","'img' is defined but never used.","no-global-assign","no-unsafe-negation"]